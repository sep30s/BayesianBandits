---
title: "Data Exploration"
author: "Sara Parrish"
date: 09/21/2024
date-format: "MMM D, YYYY"
format:
  html:
    link-external-icon: true
    link-external-newwindow: true
    toc: true
    toc-depth: 6
course: Capstone Projects in Data Science
bibliography: references.bib
self-contained: true
execute: 
  warning: false
  message: false
editor: 
  markdown: 
    wrap: 72
theme: solar
---

```{css, echo=FALSE}
pre {
  max-height: 300px;
  overflow-y: auto;
}

```

# Data Set 1: Bureau of Transportation Statistics
## Airline On-Time Statistics and Delay Causes for PNS
<https://www.transtats.bts.gov/OT_Delay/OT_DelayCause1.asp?20=E>

- The following disclaimer can be found on the website:
  "A flight is considered delayed when it arrived 15 or more minutes [later] than the schedule (see definitions in Frequently Asked Questions). Delayed minutes are calculated for delayed flights only. Data presented summarizes arriving flights only.
When multiple causes are assigned to one delayed flight, each cause is prorated based on delayed minutes it is responsible for. The displayed numbers are rounded and may not add up to the total."

- I began by reading the data in and inspecting the organization. 

```{r}
library(knitr)

BTSdelays <- read.csv("BTS_Delays.csv")
```

<div class="table-scroll"> 
```{r} 
kable(head(BTSdelays)) 
``` 
</div> 



<div class="table-scroll"> 
```{r}
dim(BTSdelays)
knitr::kable(tail(BTSdelays))
```
</div> 


- So we have 1366 entries, with 21 columns, going back to January of 2010. 
- Following are the provided definitions of the variables. 

<style type="text/css">
.tg  {border-collapse:collapse;border-spacing:0;margin:0px auto;}
.tg td{border-bottom-width:1px;border-color:black;border-style:solid;border-top-width:1px;border-width:0px;
  font-family:Arial, sans-serif;font-size:14px;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg th{border-bottom-width:1px;border-color:black;border-style:solid;border-top-width:1px;border-width:0px;
  font-family:Arial, sans-serif;font-size:14px;font-weight:normal;overflow:hidden;padding:10px 5px;word-break:normal;}
.tg .tg-ok05{background-color:#000000;color:#efefef;font-weight:bold;position:-webkit-sticky;position:sticky;text-align:center;
  top:-1px;vertical-align:bottom;will-change:transform}
.tg .tg-ehk8{background-color:#000000;border-color:inherit;color:#efefef;font-weight:bold;position:-webkit-sticky;position:sticky;
  text-align:center;top:-1px;vertical-align:bottom;will-change:transform}
.tg .tg-f5h8{color:#efefef;text-align:center;vertical-align:bottom}
.tg .tg-ujrm{color:#efefef;text-align:center;vertical-align:middle}
@media screen and (max-width: 767px) {.tg {width: auto !important;}.tg col {width: auto !important;}.tg-wrap {overflow-x: auto;-webkit-overflow-scrolling: touch;margin: auto 0px;}}</style>
<div class="tg-wrap"><table class="tg"><thead>
  <tr>
    <th class="tg-ehk8">Variable</th>
    <th class="tg-ok05"> Definition</th>
  </tr></thead>
<tbody>
  <tr>
    <td class="tg-f5h8">year</td>
    <td class="tg-f5h8">YYYY   format</td>
  </tr>
  <tr>
    <td class="tg-f5h8">month</td>
    <td class="tg-f5h8">MM   format (1-12)</td>
  </tr>
  <tr>
    <td class="tg-f5h8">carrier</td>
    <td class="tg-f5h8">Code   assigned by assigned by US DOT to identify a unique airline carrier.  </td>
  </tr>
  <tr>
    <td class="tg-f5h8">carrier_name</td>
    <td class="tg-f5h8">Unique   airline (carrier) is defined as one holding and reporting under the same DOT   certificate regardless of its Code, Name, or holding company/corporation.</td>
  </tr>
  <tr>
    <td class="tg-f5h8">airport</td>
    <td class="tg-f5h8">A   three character alpha-numeric code issued by the U.S. Department of   Transportation which is the official designation of the airport.</td>
  </tr>
  <tr>
    <td class="tg-f5h8">airport_name</td>
    <td class="tg-f5h8">a   place from which aircraft operate that usually has paved runways and   maintenance facilities and often serves as a terminal</td>
  </tr>
  <tr>
    <td class="tg-f5h8">arr_flights</td>
    <td class="tg-f5h8">Arrival   Flights</td>
  </tr>
  <tr>
    <td class="tg-f5h8">arr_del15</td>
    <td class="tg-f5h8">Arrival   Delay Indicator, 15 Minutes or More Arrival delay equals the difference   of the actual arrival time minus the scheduled arrival time. A flight is   considered on-time when it arrives less than 15 minutes after its published   arrival time.</td>
  </tr>
  <tr>
    <td class="tg-f5h8">carrier_ct</td>
    <td class="tg-f5h8">Carrier   Count for airline cause of delay</td>
  </tr>
  <tr>
    <td class="tg-f5h8">weather_ct</td>
    <td class="tg-f5h8">Weather   Count for airline cause of delay</td>
  </tr>
  <tr>
    <td class="tg-f5h8">nas_ct</td>
    <td class="tg-f5h8">NAS   (National Air System) Count for airline cause of delay</td>
  </tr>
  <tr>
    <td class="tg-f5h8">security_ct</td>
    <td class="tg-f5h8">Security   County for airline cause of delay</td>
  </tr>
  <tr>
    <td class="tg-f5h8">late_aircraft_ct</td>
    <td class="tg-f5h8">Late   Aircraft Delay Count for airline cause of delay</td>
  </tr>
  <tr>
    <td class="tg-f5h8">arr_cancelled</td>
    <td class="tg-f5h8">flight   cancelled</td>
  </tr>
  <tr>
    <td class="tg-f5h8">arr_diverted</td>
    <td class="tg-f5h8">flight   diverted</td>
  </tr>
  <tr>
    <td class="tg-f5h8">arr_delay</td>
    <td class="tg-f5h8">Difference   in minutes between scheduled and actual arrival time. Early arrivals show   negative numbers.</td>
  </tr>
  <tr>
    <td class="tg-f5h8">carrier_delay</td>
    <td class="tg-f5h8">Carrier   Delay, in Minutes</td>
  </tr>
  <tr>
    <td class="tg-f5h8">weather_delay</td>
    <td class="tg-f5h8">Weather   Delay, in Minutes</td>
  </tr>
  <tr>
    <td class="tg-f5h8">nas_delay</td>
    <td class="tg-f5h8">National   Air System Delay, in Minutes</td>
  </tr>
  <tr>
    <td class="tg-f5h8">security_delay</td>
    <td class="tg-ujrm">Security   Delay, in Minutes</td>
  </tr>
  <tr>
    <td class="tg-f5h8">late_aircraft_delay</td>
    <td class="tg-f5h8">Late   Aircraft Delay, in Minutes</td>
  </tr>
</tbody></table></div>


- This data set is composed of data reported by domestic carriers monthly to the Bureau of Transportation Statistics (BTS). The BTS has data on all domestic airports, but the Pensacola Airport was chosen for this review. Each monthly report by the carrier includes information on flights arriving at the selected airport, not on departures.

- Below I view and remove NA inputs.

```{r}
library(tidyr)
colSums(is.na(BTSdelays))
print(BTSdelays[rowSums(is.na(BTSdelays)) > 0, ])
BTSdelays1 <-na.omit(BTSdelays)
unique(BTSdelays1$carrier)
```

- Below I group data by carrier and get the total arrived flights and average arrival delay. I want to look into the average arrival delays by carrier. 

```{r}

library(dplyr)
carrier_summary <- BTSdelays1 %>%
  group_by(carrier) %>%
  summarize(
    total_flights = sum(arr_flights),
    avg_arr_delay = sum(arr_delay)/total_flights
  )

print(carrier_summary)
```

- This is over a ten year span, so I want to look at how many months each carrier reported data for PNS.


```{r}
carrier_count <- BTSdelays1 %>%
  count(carrier)
print(carrier_count)
```


- Since there are quite a few carriers with much less data, I remove some with the fewest reported months.

```{r}
library(psych)
carrier_stats <- describe(carrier_count$n)
print(carrier_stats)
```

- The median falls fairly close to the mean, so I chose it as the cutoff. 

```{r}
carrier_summary1 <- carrier_summary%>%
  left_join(carrier_count, by= "carrier", suffix = c("", "_count"))

print(carrier_summary1)
```

- Below is a visualization for the average arrival delay by carrier with a gradient fill to indicate the number of months the carrier reported arriving flights at the Pensacola International Airport. 

```{r}
library(ggplot2)

carrier_summary_ci <- BTSdelays1 %>%
  group_by(carrier) %>%
  summarise(
    carrier_name = first(carrier_name),
    avg_arr_delay = mean(arr_delay, na.rm = TRUE),
    n = n(),
    sd_arr_delay = sd(arr_delay, na.rm = TRUE)
  ) %>%
  filter(n>100) %>%
  mutate(
    lower_ci = avg_arr_delay - qt(0.975, df = n - 1) * sd_arr_delay / sqrt(n),
    upper_ci = avg_arr_delay + qt(0.975, df = n - 1) * sd_arr_delay / sqrt(n)
  )


filtered_carriers <- BTSdelays1 %>%
  group_by(carrier) %>%
  filter(n() > 100)

total_mean_delay_filtered <- mean(filtered_carriers$arr_delay)

ggplot(carrier_summary_ci, aes(x = carrier_name, y = avg_arr_delay)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) + 
  geom_hline(yintercept = total_mean_delay_filtered, linetype = "dashed", color = "red") + 
  labs(title = "Average Arrival Delays by Carrier",
       x = "Carrier Name",
       y = "Average Arrival Delay (minutes)") +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


- From January 2010 to July 2024, there are 175 months of data. The only airline that has been consistently operating through PNS over this time frame is Delta, so this visualization filtered for any airline with over 100 months of data. 

- With some quick research, Envoy is a [subsidiary](https://www.envoyair.com/#:~:text=Envoy%20Air%20Inc.%20is%20a%20wholly%2Downed%20subsidiary%20of%20American%20Airlines%20Group) of American Airlines, Mesa is [partnered](https://www.mesa-air.com/#:~:text=As%20part%20of%20this%20collaboration,travel%20options%20across%20the%20globe.) with United, and ExpressJet [closed its doors in 2022](ExpressJet Airlines, a former U.S. regional carrier with roots that go back more than 30 years).

```{r}
carrier_summary_ci <- BTSdelays1 %>%
  group_by(carrier) %>%
  summarise(
    carrier_name = first(carrier_name),
    avg_arr_delay = mean(arr_delay, na.rm = TRUE),
    n = n(),
    sd_arr_delay = sd(arr_delay, na.rm = TRUE)
  ) %>%
  filter(n>70) %>%
  mutate(
    lower_ci = avg_arr_delay - qt(0.975, df = n - 1) * sd_arr_delay / sqrt(n),
    upper_ci = avg_arr_delay + qt(0.975, df = n - 1) * sd_arr_delay / sqrt(n)
  )

filtered_carriers <- BTSdelays1 %>%
  group_by(carrier) %>%
  filter(n() > 70)

total_mean_delay_filtered <- mean(filtered_carriers$arr_delay)

ggplot(carrier_summary_ci, aes(x = carrier_name, y = avg_arr_delay)) +
  geom_point(size = 3) +
  geom_errorbar(aes(ymin = lower_ci, ymax = upper_ci), width = 0.2) + 
  geom_hline(yintercept = total_mean_delay_filtered, linetype = "dashed", color = "red") + 
  labs(title = "Average Arrival Delays by Carrier",
       x = "Carrier Name",
       y = "Average Arrival Delay (minutes)") +
  theme_minimal()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

- With a smaller requirement of over 70 months of data, we can see the inclusion of SkyWest, Southwest, PSA, Frontier, and American Airlines.

- This data set has a large amount of data to choose from. I only worked with the data for PNS from 2010 through June 2024. There are many possibilities if we choose to work with this data set. 

# Data Set 2: Flight Delay and Cancellation Data Set
## Also From the BTS 
<https://www.kaggle.com/datasets/patrickzel/flight-delay-and-cancellation-dataset-2019-2023?resource=download>

- This data set appears to be from the same database as the previous data set, but includes an additional 11 attributes to include scheduled and actual arrival and departure time. 


```{r}
Kaggledelays <- read.csv(gzfile("Kaggledelays.csv.gz"))
knitr::kable(head(Kaggledelays))
```

```{r}
dim(Kaggledelays)
```

- This data set is much larger with 3 million rows and 32 columns.

```{r}
names(Kaggledelays)
```

- The additional columns appear to include scheduled arrival and departure as well as departure delay, the specific cancellation code, air time, distance, taxi times, flight number, destination and origin. Although this data set is a bit larger, it provides more options for analysis. 


```{r}
unique_airlines <- Kaggledelays %>%
  summarise(unique_airlines = n_distinct(AIRLINE))
print(unique_airlines)
```

```{r}
unique_dest <- Kaggledelays %>%
  summarise(unique_dest = n_distinct(DEST))
print(unique_dest)
```

- Given this data set is working with 380 unique destinations, it makes sense that it is also comprised of 18 different airlines. There is an issue when it comes to computation with this data set. Three million lines can be quite much for 8GB of RAM. 


```{r}
KaggleMiami <- Kaggledelays %>%
  filter(DEST == "MIA")
dim(KaggleMiami)
```

- Nice. Manageable. 


```{r}
airline_summary <- KaggleMiami %>%
  na.omit() %>%
  group_by(AIRLINE_CODE) %>%
  summarize(
    avg_arr_delay = mean(ARR_DELAY),
    avg_airtime = mean(AIR_TIME)
  )

print(airline_summary)
```


- I considered visualizing this but then decided tracking arrival delays as a function of airtime would be more interesting.

```{r}
library(ggplot2)
ggplot(KaggleMiami, aes(x = AIR_TIME, y = ARR_DELAY, color = AIRLINE_CODE)) +
  geom_smooth(se = FALSE) +
  labs(
    title = "Arrival Delay vs. Air Time by Airline",
    x = "Air Time",
    y = "Arrival Delay",
    color = "Airline Code"
  )
```


- This graph is very rudimentary but further exploration in a relationship between air time and arrival delay could be interesting. This data set also provides the opportunity to investigate some other variables such as taxi time or time of day of the flight. While this data set is fairly large, interesting insight can  be extracted from it. 

